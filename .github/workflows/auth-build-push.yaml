name: Build and Push Docker Images

on:
  push:
    paths:
      -  'services/auth/**'


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build and push User service Docker image
        env:
          DATABASE_URL: ${{ secrets.AUTH_DATABASE_URL }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          cd 'services/auth/**'
          docker build --build-arg DATABASE_URL="${DATABASE_URL}" -t $DOCKER_USERNAME/user:${{ env.hash }} .
          docker push $DOCKER_USERNAME/user:${{ env.hash }}




# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4  # Updated to the latest version

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'  # Updated to Node.js version 20

#       - name: Install dependencies
#         run: |
#           cd auth
#           yarn install --frozen-lockfile

#       - name: Run tests
#         run: |
#           cd auth
#           yarn test



# name: Auth Service CI

# on:
#   push:
#     branches:
#       - main


# jobs:
#   inventory-auth:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "Action Started"
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Run a one-line script
#         run : echo "Hello,auth!"
#       - name: Run a multi-line script
#         run:  |
#           echo Add other actions to build,
#           echo test, and deploy your project.
#       - name: List files
#         run: ls ${{ github.workspace }}
#       - name: Print GitHub context
#         env:
#           GITHUB_CONTEXT: ${{toJson(github)}}
#         run: echo "$GITHUB_CONTEXT"
#       - name: Action completed
#         run:  echo "Action completed"
