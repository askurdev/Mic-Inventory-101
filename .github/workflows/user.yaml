name: User Service CI

on:
  push:
    branches: [ main ] # Trigger the workflow on every commit to the main branch.
  pull_request:
    branches: [ main ] # Trigger the workflow on pull requests targeting the main branch.

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x'] # Specify Node.js 20.x version

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Checkout the source code from the repository.

    - name: Set up Node.js
      uses: actions/setup-node@v3 # Use setup-node action version 3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn' # Use yarn caching for faster dependency installs.

    - name: Install Node.js dependencies
      run: |
        cd user
        yarn install --frozen-lockfile # Perform a clean install of Node.js dependencies.

    - name: Run tests
      run: |
        cd user
        yarn test # Run tests using the specified Node.js version.

    - name: List files in user directory for debugging
      run: |
        cd user
        ls -la # List files in the user directory to ensure correct path and files.





# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: yarn ci
#       - name: Run tests
#         run: yarn test


# on:
#   push:
#     branches:
#       - main


# jobs:
#   inventory-user:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "Action Started"
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Run a one-line script
#         run : echo "Hello,User!"
#       - name: Run a multi-line script
#         run:  |
#           echo Add other actions to build,
#           echo test, and deploy your project.
#       - name: List files
#         run: ls ${{ github.workspace }}
#       - name: Print GitHub context
#         env:
#           GITHUB_CONTEXT: ${{toJson(github)}}
#         run: echo "$GITHUB_CONTEXT"
#       - name: Action completed
#         run:  echo "Action completed"
